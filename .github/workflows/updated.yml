name: Updated

on:
  schedule:
  - cron: '30 11 * * 1' # 11h30 UTC (08h30 BRT) on Mondays

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Zip
        run: zip -r repository.zip .

      - name: Repository
        uses: actions/upload-artifact@v2
        with:
          name: repository
          path: repository.zip

  test:
    needs: checkout
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php_version:
          - "8.0"
          - "8.1"
        # include:
        #   - php_version: "8.1.0RC6"
        #     experimental: true
        #     composer_platform_php: "8.0"
    steps:
      - name: Checkout
        uses: actions/download-artifact@v2
        with:
          name: repository

      - name: Unzip
        run: unzip repository.zip && rm -f repository.zip

      - name: Prepare
        run: |
          echo UID=`id -u` >> $GITHUB_ENV
          echo GID=`id -g` >> $GITHUB_ENV

      - name: Build
        run: docker-compose build
        env:
          PHP_VERSION: ${{ matrix.php_version }}
        continue-on-error: ${{ matrix.experimental == true }}

      - name: PHP Experimental
        if: matrix.experimental == true
        run: |
          docker-compose run romans composer config platform.php ${{ matrix.composer_platform_php }}
          docker-compose run romans composer update --lock --no-install
          git diff
        continue-on-error: ${{ matrix.experimental == true }}

      - name: Install
        run: docker-compose run romans composer install
        continue-on-error: ${{ matrix.experimental == true }}

      - name: Check Dependencies
        run: docker-compose run romans composer outdated
        continue-on-error: ${{ matrix.experimental == true }}

      - name: Check Dependencies Direct
        run: docker-compose run romans composer outdated --direct --strict --minor-only
        continue-on-error: ${{ matrix.experimental == true }}

      - name: Update Dependencies and Test
        run: |
          docker-compose run romans composer update
          docker-compose run romans composer test
        if: always()
        continue-on-error: ${{ matrix.experimental == true }}

      - name: Clean
        run: docker-compose down
        if: always()

  clean:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Clean
        uses: geekyeggo/delete-artifact@v1
        with:
          name: repository
